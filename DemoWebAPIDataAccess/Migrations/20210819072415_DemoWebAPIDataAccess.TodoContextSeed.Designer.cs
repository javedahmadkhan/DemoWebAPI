// <auto-generated />
using DemoWebAPIDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoWebAPIDataAccess.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20210819072415_DemoWebAPIDataAccess.TodoContextSeed")]
    partial class DemoWebAPIDataAccessTodoContextSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoWebAPIEntities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfternoonTask")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EveningTask")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IsTaskComplete")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MorningTask")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaskName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TodoItem", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AfternoonTask = "Lunch",
                            EveningTask = "Dinner",
                            IsTaskComplete = "Y",
                            MorningTask = "Breakfast",
                            TaskName = "Task1"
                        },
                        new
                        {
                            Id = 2,
                            AfternoonTask = "Test",
                            EveningTask = "Deploy",
                            IsTaskComplete = "Y",
                            MorningTask = "Code",
                            TaskName = "Task2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
